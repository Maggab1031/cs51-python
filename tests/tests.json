{
    "process" : [
        "len(ans) == {} and len(ans[0]) == {} and int(ans[1][3]) == {} and type(ans[0][0]) == type({})",
        "f = open('tests/snail.ppm'); lines = f.readlines(); body = lines[3:]; cols, rows = list(map(int, lines[1].split())); f.close()",
        {
            "(['255 0 0 0 255 0 0 0 255 255 255 255', '0 0 0 255 0 0 0 255 0 0 0 255', '255 0 255 0 0 0 255 0 0 0 255 0', '0 255 255 255 0 255 0 0 0 255 0 0', '255 0 0 0 255 0 0 0 255 255 255 255', '0 0 0 255 0 0 0 255 0 0 0 255'], 6, 4)" : "(6, 12, 255, 47)",
            "(body, rows, cols)" : "(rows, 3*cols, 255, 47)"
        }
    ],
    "read_ppm" : [
        "len(ans) == {} and len(ans[0]) == {} and int(ans[1][3]) == {}",
        "f = open('tests/football_player.ppm'); lines = f.readlines(); body = lines[3:]; cols, rows = list(map(int, lines[1].split())); f.close()",
        {
            "'tests/football_player.ppm'" : "(rows, 3*cols, 241)"
        }
    ],
    "write_ppm" : [
        "type(ans) == type({})",
        "f = open('tests/sines.ppm'); lines = f.readlines(); body = lines[3:]; cols, rows = list(map(int, lines[1].split())); f.close()",
        {
            "(body, 'fname_out.ppm')" : "None"
        }
    ],
    "scale" : [
        "len(ans) == {} and len(ans[0]) == {} and ans[2][1] == {}",
        "test1 = [range(6*i, 6*(i+1)) for i in range(6)]; test2 = [[i**2 for i in range(10)] for j in range(10)]",
        {
            "(test1, 1, 1)" : "(len(test1), len(test1[0]), test1[2][1])",
            "(test1, 2, 1)" : "(len(test1)//2, len(test1[0]), test1[1][1])",
            "(test2, 1, 1)" : "(len(test2), len(test2[0]), test2[2][1])",
            "(test2, 2, 2)" : "(len(test2)//2, len(test2[0])//2, test2[1][1])"
        }
    ]
}
