{
    "process" : {
        "schema": [
            "len(ans) == {}",
            "len(ans[0]) == {}",
            "int(ans[1][3]) == {}",
            "type(ans[0][0]) == type({})"
        ],
        "setup" : [
            "f = open('tests/ppms/snail.ppm')",
            "lines = f.readlines();",
            "f.close()",
            "body = lines[3:]",
            "cols, rows = list(map(int, lines[1].split()))"
        ],
        "tests": {
            "(['255 0 0 0 255 0 0 0 255 255 255 255', '0 0 0 255 0 0 0 255 0 0 0 255', '255 0 255 0 0 0 255 0 0 0 255 0', '0 255 255 255 0 255 0 0 0 255 0 0', '255 0 0 0 255 0 0 0 255 255 255 255', '0 0 0 255 0 0 0 255 0 0 0 255'], 6, 4)" : "(6, 12, 255, 47)",
            "(body, rows, cols)" : "(rows, 3*cols, 255, 47)"
        }
    },
    "read_ppm" : {
        "schema": [
            "len(ans) == {}",
            "len(ans[0]) == {}",
            "int(ans[1][3]) == {}"
        ],
        "setup" : [
            "f = open('tests/ppms/football_player.ppm')",
            "lines = f.readlines();",
            "f.close()",
            "body = lines[3:]",
            "cols, rows = list(map(int, lines[1].split()))"
        ],
        "tests" : {
            "'tests/ppms/football_player.ppm'" : "(rows, 3*cols, 241)"
        }
    },
    "scale" : {
        "schema" : [
            "len(ans) == {}",
            "len(ans[0]) == {}",
            "ans[2][1] == {}"
        ],
        "setup" : [
            "test1 = [range(6*i, 6*(i+1)) for i in range(6)]",
            "test2 = [[i**2 for i in range(10)] for j in range(10)]"
        ],
        "tests" : {
            "(test1, 1, 1)" : "(len(test1), len(test1[0]), test1[2][1])",
            "(test1, 2, 1)" : "(len(test1)//2, len(test1[0]), test1[1][1])",
            "(test2, 1, 1)" : "(len(test2), len(test2[0]), test2[2][1])",
            "(test2, 2, 2)" : "(len(test2)//2, len(test2[0])//2, test2[1][1])"
        }
    }
}
